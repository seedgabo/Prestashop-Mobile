import { ElementRef } from '@angular/core';
import { Config } from '../../config/config';
import { Ion } from '../ion';
import { Navbar } from '../navbar/navbar';
import { ViewController } from '../nav/view-controller';
/**
 * @private
 */
export declare class ToolbarBase extends Ion {
    itemRefs: ElementRef[];
    titleRef: any;
    titleCmp: any;
    constructor(elementRef: ElementRef);
    /**
     * @private
     */
    setTitleCmp(titleCmp: any): void;
    /**
     * @private
     * Returns the toolbar title text if it exists or an empty string
     */
    getTitleText(): any;
    /**
     * @private
     */
    getTitleRef(): any;
    /**
     * @private
     * A toolbar items include the left and right side `ion-buttons`,
     * and every `menu-toggle`. It does not include the `ion-title`.
     * @returns {TODO} Array of this toolbar's item ElementRefs.
     */
    getItemRefs(): ElementRef[];
    /**
     * @private
     */
    addItemRef(itemElementRef: ElementRef): void;
}
/**
 * @name Toolbar
 * @description
 * A Toolbar is a generic bar that is positioned above or below content.
 * Unlike a [Navbar](../../nav/Navbar), a toolbar can be used as a subheader.
 * Toolbars are positioned automatically at the `top`, but they can be
 * positioned at the bottom by setting `position="bottom"` on the component.
 *
 *
 * ### Buttons in a Toolbar
 * Buttons placed in a toolbar should be placed inside of the `<ion-buttons>`
 * element. An exception to this is a [menuToggle](../../menu/MenuToggle) button.
 * It should not be placed inside of the `<ion-buttons>` element. Both the
 * `<ion-buttons>` element and the `menuToggle` can be positioned inside of the
 * toolbar using different properties. The below chart has a description of each
 * property.
 *
 * | Property    | Description                                                                                                           |
 * |-------------|-----------------------------------------------------------------------------------------------------------------------|
 * | `start`     | Positions element to the left of the content in `ios` mode, and directly to the right in `md` and `wp` mode.    |
 * | `end`       | Positions element to the right of the content in `ios` mode, and to the far right in `md` and `wp` mode.        |
 * | `left`      | Positions element to the left of all other elements.                                                            |
 * | `right`     | Positions element to the right of all other elements.                                                           |
 *
 * See [usage](#usage) below for some examples.
 *
 *
 * @usage
 * ```html
 * <ion-toolbar>
 *   <ion-buttons start>
 *     <button>
 *       <ion-icon name="contact"></ion-icon>
 *     </button>
 *     <button>
 *       <ion-icon name="search"></ion-icon>
 *     </button>
 *   </ion-buttons>
 *   <ion-title>My Toolbar Title</ion-title>
 * </ion-toolbar>
 *
 * <ion-toolbar>
 *   <ion-title>I'm a subheader</ion-title>
 * </ion-toolbar>
 *
 * <ion-content></ion-content>
 *
 * <ion-toolbar position="bottom">
 *   <ion-title>I'm a subfooter</ion-title>
 *   <ion-buttons right>
 *     <button>
 *       <ion-icon name="menu"></ion-icon>
 *     </button>
 *   </ion-buttons>
 * </ion-toolbar>
 *
 * <ion-toolbar position="bottom">
 *   <ion-title>I'm a footer</ion-title>
 *   <ion-buttons end>
 *     <button>
 *       <ion-icon name="more"></ion-icon>
 *     </button>
 *     <button>
 *       <ion-icon name="options"></ion-icon>
 *     </button>
 *   </ion-buttons>
 * </ion-toolbar>
 *  ```
 *
 * @property {any} [position] - set position of the toolbar, `top` or `bottom`.
 * Default `top`.
 * @demo /docs/v2/demos/toolbar/
 * @see {@link ../../navbar/Navbar/ Navbar API Docs}
 */
export declare class Toolbar extends ToolbarBase {
    private _sbPadding;
    constructor(viewCtrl: ViewController, elementRef: ElementRef, config: Config);
}
/**
 * @name Title
 * @description
 * `ion-title` is a component that sets the title of the `Toolbar` or `Navbar`
 *
 * @usage
 *
 * ```html
 * <ion-navbar *navbar>
 *    <ion-title>Tab 1</ion-title>
 * </ion-navbar>
 * ```
 *
 * Or to create a navbar with a toolbar as a subheader:
 *
 * ```html
 * <ion-navbar *navbar>
 *    <ion-title>Tab 1</ion-title>
 * </ion-navbar>
 *
 * <ion-toolbar>
 *   <ion-title>Subheader</ion-title>
 * </ion-toolbar>
 * ```
 *
 * @demo /docs/v2/demos/title/
 */
export declare class ToolbarTitle extends Ion {
    constructor(elementRef: ElementRef, toolbar: Toolbar, navbar: Navbar);
    /**
     * @private
     */
    getTitleText(): any;
}
/**
 * @private
 */
export declare class ToolbarItem {
    inToolbar: boolean;
    constructor(elementRef: ElementRef, toolbar: Toolbar, navbar: Navbar);
    _buttons: any;
}
